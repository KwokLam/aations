name: docker-compose
on: 
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 1024
          swap-size-mb: 1024
          remove-dotnet: 'true'
      - uses: actions/checkout@v2
      - name: Build the stack
        env:
          SA_URL: ${{ secrets.SA_URL }}
          SA_SECRET: ${{ secrets.SA_SECRET }}
          ARIA2C_SECRET: ${{ secrets.ARIA2C_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: docker run -d --name easydown --restart unless-stopped -p 6900:6900 - e SIZE_FILTER=40M -e RCLONE_DESTINATION=gc:{1QZLVp0hXUrIxa4A7pZvqJsbkwBR14q4v} \
            -e RCLONE_CONFIG=[gc]\ntype = drive\nscope = drive\nservice_account_file = /app/accounts/33.json\nservice_account_file_path = /app/accounts/\n \
            -e SA_URL=${{ secrets.SA_URL }} -e SA_SECRET=${{ secrets.SA_SECRET }} -e ARIA2C_SECRET=${{ secrets.ARIA2C_SECRET }} -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -v ./downloads:/app/downloads \ kwok1am/action:v1
      - name: Check running containers
        run: | 
          docker ps -a 
          df -h
          curl ipinfo.io
          sleep 10s && docker logs easydown
      - name: Add Tunnle
        env:
          TUNNEL_ORIGIN_CERT: '/home/runner/work/aations/aations/cert.pem'
        run: | 
          curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb && sudo dpkg -i cloudflared.deb
          echo "${{ secrets.TUNNEL_YML }}" > easydown.yml
          wget -q ${{ secrets.TUNNEL_JSON }}
          echo "${{ secrets.CERT_PEM }}" > cert.pem 
          cloudflared tunnel --config easydown.yml run
      - name: Run test suite
        run: sleep 6h
