name: jav_v2

on: 
  schedule:
    - cron: '15 17 * * *'
  workflow_dispatch:
  repository_dispatch:
    types: JAV

jobs:
  bench:
    runs-on: windows-latest
    steps:
      - name: Download&Unzip mdcx
        run: |
          Invoke-WebRequest -Uri ${{ secrets.MDCX_URL }} -outfile MDCx.zip
          Expand-Archive -Path "MDCx.zip" -DestinationPath "mdcx"
          Invoke-WebRequest -Uri ${{ secrets.MDCX_CONF }} -outfile ./mdcx/config.ini
      - name: Install Rclone
        run: |
          Invoke-WebRequest -Uri "https://downloads.rclone.org/v1.60.0/rclone-v1.60.0-windows-amd64.zip" -outfile rclone.zip
          Expand-Archive -Path "rclone.zip" -DestinationPath "rclone"
          Invoke-WebRequest -Uri ${{ secrets.RCLONE_CONF }} -outfile .\rclone\rclone-v1.60.0-windows-amd64\rclone.conf
          #安装winfsp
          Invoke-WebRequest -Uri "https://github.com/winfsp/winfsp/releases/download/v1.12/winfsp-1.12.22301.msi" -outfile winfsp.msi
          msiexec /i winfsp.msi /q
      - name: Install dependencies
        run: |
          Start-Process -FilePath ".\rclone\rclone-v1.60.0-windows-amd64\rclone.exe" -ArgumentList "mount daily: .\daily --allow-other  --vfs-cache-mode full  --buffer-size 256M --low-level-retries 200 --dir-cache-time 24h --vfs-cache-max-age 24h --vfs-read-chunk-size 64M --vfs-read-chunk-size-limit 5G  --poll-interval 15s" -WindowStyle hidden
          Start-Sleep -s 10
          TREE .\daily\Nyaa
          Start-Process -FilePath .\mdcx\MDCx.exe -WorkingDirectory .\mdcx
          Start-Sleep -s 25
          TREE /F .\mdcx
      - name: PRINT LOG
        timeout-minutes: 150
        run: |
          $timeout = 2700
          $start_time = Get-Date
          $pos = 0
          while ((Get-Date) - $start_time -lt [TimeSpan]::FromSeconds($timeout)) {
              if (Test-Path ".\mdcx\log\*.txt") {
                  $size = (Get-Item .\mdcx\log\*.txt).Length
                  if ($size -gt $pos) {
                      $content = Get-Content .\mdcx\log\*.txt -Tail ($size - $pos) -Encoding UTF8
                      Write-Host $content "`n"
                      if ($content -match "All finished") {
                          Write-Host "Log output completed."
                          break
                      }
                      $pos = $size
                  }
              }
              Start-Sleep -Seconds 5
          }
